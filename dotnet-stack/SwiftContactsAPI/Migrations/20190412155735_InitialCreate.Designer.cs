// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwiftContactsAPI.Data;

namespace SwiftContactsAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190412155735_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SwiftContactsAPI.Models.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body");

                    b.Property<string>("Description");

                    b.Property<int?>("EmailTemplateTypeId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("EmailTemplateTypeId");

                    b.ToTable("EmailTemplates");
                });

            modelBuilder.Entity("SwiftContactsAPI.Models.EmailTemplateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("EmailTemplateTypes");
                });

            modelBuilder.Entity("SwiftContactsAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SwiftContactsAPI.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("SwiftContactsAPI.Models.EmailTemplate", b =>
                {
                    b.HasOne("SwiftContactsAPI.Models.EmailTemplateType", "EmailTemplateType")
                        .WithMany("EmailTemplates")
                        .HasForeignKey("EmailTemplateTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
